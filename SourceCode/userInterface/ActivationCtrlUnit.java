package userInterface;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Created by xinrui on 6/5/17.
 */

//JPanel unit for controlling the schedule of each sensor
public class ActivationCtrlUnit extends JPanel {
    private JCheckBox activateCheckBox;
    private JPanel panel1;
    private JTextField from;
    private JTextField to;
    private ConfigurePanel configurePanel;

    //initial the JPanel
    public ActivationCtrlUnit() {
        from.setText("");
        to.setText("");

        /**if one of the room's sensor is chosen to be deactivated,
         * then the overall schedule checkbox will be unchecked.
         */
        activateCheckBox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (!activateCheckBox.isSelected()) {
                    configurePanel.centrlUnitUnCheck();
                }
            }
        });

        /**get input of the start time of working schedule
         * and enforce the input to be four digit betwenn 0000 and 2359
         */
        from.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String input = from.getText();
                if (input.equals("")) {
                    return;
                }
                if (input.length() != 4) {
                    JOptionPane.showMessageDialog(from, "Please input 4 digit between 0000 and 2359");
                    from.setText("");
                    return;
                }
                char[] temp = input.toCharArray();
                for (int i = 0; i < 4; i++) {
                    if (!Character.isDigit(temp[i])) {
                        JOptionPane.showMessageDialog(from, "Please input 4 digit between 0000 and 2359");
                        from.setText("");
                        return;
                    }
                }
                int check = Integer.parseInt(input);
                if (check < 0 || check > 2359) {
                    JOptionPane.showMessageDialog(from, "Please input 4 digit between 0000 and 2359");
                    from.setText("");
                    return;
                }

            }
        });

        /**get input of the end time of working schedule
         * and enforce the input to be four digit betwenn 0000 and 2359
         */
        to.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String input = to.getText();
                if (input.equals("")) {
                    return;
                }
                if (input.length() != 4) {
                    JOptionPane.showMessageDialog(to, "Please input 4 digit between 0000 and 2359");
                    to.setText("");
                    return;
                }
                char[] temp = input.toCharArray();
                for (int i = 0; i < 4; i++) {
                    if (!Character.isDigit(temp[i])) {
                        JOptionPane.showMessageDialog(to, "Please input 4 digit between 0000 and 2359");
                        to.setText("");
                        return;
                    }
                }
                int check = Integer.parseInt(input);
                if (check < 0 || check > 2359) {
                    JOptionPane.showMessageDialog(to, "Please input 4 digit between 0000 and 2359");
                    to.setText("");
                    return;
                }
            }
        });
    }

    //build connection between configurePanel and the centre controller
    public void setConfigurePanel(ConfigurePanel configurePanel) {
        this.configurePanel = configurePanel;
    }

    //getter for ActivateCheckBox
    public JCheckBox getActivateCheckBox() {
        return activateCheckBox;
    }

    //getter for start time
    public JTextField getFrom() {
        return from;
    }

    //getter for end time
    public JTextField getTo() {
        return to;
    }

    //clear the components of this unit when change the overall system
    public void clear() {
        activateCheckBox.setSelected(false);
        from.setText("");
        to.setText("");
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    //initial the GUI
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panel1.setOpaque(false);
        activateCheckBox = new JCheckBox();
        activateCheckBox.setOpaque(false);
        activateCheckBox.setText("Activate");
        panel1.add(activateCheckBox, BorderLayout.NORTH);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        panel2.setOpaque(false);
        panel1.add(panel2, BorderLayout.CENTER);
        final JLabel label1 = new JLabel();
        label1.setText("From");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(label1, gbc);
        from = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(from, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("To");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(label2, gbc);
        to = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel2.add(to, gbc);
    }

    //get the root component
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
